/*
 * This file is generated by jOOQ.
 */
package org.example.database.model.tables.records;


import org.example.database.model.tables.CarTable;
import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record4;
import org.jooq.Row4;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class CarRecord extends UpdatableRecordImpl<CarRecord> implements Record4<Long, String, Double, Long> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>public.car.id</code>.
     */
    public void setId(Long value) {
        set(0, value);
    }

    /**
     * Getter for <code>public.car.id</code>.
     */
    public Long getId() {
        return (Long) get(0);
    }

    /**
     * Setter for <code>public.car.brand</code>.
     */
    public void setBrand(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>public.car.brand</code>.
     */
    public String getBrand() {
        return (String) get(1);
    }

    /**
     * Setter for <code>public.car.price</code>.
     */
    public void setPrice(Double value) {
        set(2, value);
    }

    /**
     * Getter for <code>public.car.price</code>.
     */
    public Double getPrice() {
        return (Double) get(2);
    }

    /**
     * Setter for <code>public.car.user_id</code>.
     */
    public void setUserId(Long value) {
        set(3, value);
    }

    /**
     * Getter for <code>public.car.user_id</code>.
     */
    public Long getUserId() {
        return (Long) get(3);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Long> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record4 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row4<Long, String, Double, Long> fieldsRow() {
        return (Row4) super.fieldsRow();
    }

    @Override
    public Row4<Long, String, Double, Long> valuesRow() {
        return (Row4) super.valuesRow();
    }

    @Override
    public Field<Long> field1() {
        return CarTable.CAR_TABLE.ID;
    }

    @Override
    public Field<String> field2() {
        return CarTable.CAR_TABLE.BRAND;
    }

    @Override
    public Field<Double> field3() {
        return CarTable.CAR_TABLE.PRICE;
    }

    @Override
    public Field<Long> field4() {
        return CarTable.CAR_TABLE.USER_ID;
    }

    @Override
    public Long component1() {
        return getId();
    }

    @Override
    public String component2() {
        return getBrand();
    }

    @Override
    public Double component3() {
        return getPrice();
    }

    @Override
    public Long component4() {
        return getUserId();
    }

    @Override
    public Long value1() {
        return getId();
    }

    @Override
    public String value2() {
        return getBrand();
    }

    @Override
    public Double value3() {
        return getPrice();
    }

    @Override
    public Long value4() {
        return getUserId();
    }

    @Override
    public CarRecord value1(Long value) {
        setId(value);
        return this;
    }

    @Override
    public CarRecord value2(String value) {
        setBrand(value);
        return this;
    }

    @Override
    public CarRecord value3(Double value) {
        setPrice(value);
        return this;
    }

    @Override
    public CarRecord value4(Long value) {
        setUserId(value);
        return this;
    }

    @Override
    public CarRecord values(Long value1, String value2, Double value3, Long value4) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached CarRecord
     */
    public CarRecord() {
        super(CarTable.CAR_TABLE);
    }

    /**
     * Create a detached, initialised CarRecord
     */
    public CarRecord(Long id, String brand, Double price, Long userId) {
        super(CarTable.CAR_TABLE);

        setId(id);
        setBrand(brand);
        setPrice(price);
        setUserId(userId);
        resetChangedOnNotNull();
    }
}
